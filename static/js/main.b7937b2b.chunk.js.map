{"version":3,"sources":["videos/blackjack-video.mp4","videos/photo-contest.mp4","videos/fizz-quiz.mp4","videos/complete-me.mp4","components/NavBar/NavBar.jsx","components/Test/Test.jsx","components/View/View.jsx","components/Project/Project.jsx","pages/MainPage/MainPage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","target","rel","href","Test","props","heroku","View","github","Project","onMouseEnter","onMouseEnterHandler","projectNumber","onMouseLeave","onMouseLeaveHandler","src","video","type","autoPlay","loop","muted","hover","id","technologies","map","e","name","description","components_Test_Test","components_View_View","MainPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","state","components_NavBar_NavBar","components_Project_Project","color","completeMeVideo","fizzQuizVideo","photoContestVideo","blackjackVideo","Component","App","pages_MainPage_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","pages_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7937b2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackjack-video.29f2b74c.mp4\";","module.exports = __webpack_public_path__ + \"static/media/photo-contest.7174b4c3.mp4\";","module.exports = __webpack_public_path__ + \"static/media/fizz-quiz.8889838d.mp4\";","module.exports = __webpack_public_path__ + \"static/media/complete-me.7a6f99ab.mp4\";","import React from 'react';\nimport './NavBar.css';\n\nconst NavBar = () => (\n    <div className=\"NavBar\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/helloryantg\">Github</a>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.google.com/document/d/e/2PACX-1vS-ly5PsuwkIUlTWLAWyA_bBL0UzVl8-QCqodM-6dpZP50GlVYlX40H6RBYzj7c_Io79OnDU1jQQ_Cl/pub?embedded=true\">Resume</a>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/ryantgonzales/\">LinkedIn</a>\n    </div>\n);\n\nexport default NavBar;\n\n","import React from 'react';\nimport './Test.css'\n\nconst Test = (props) => {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.heroku}>\n            <div className=\"Test\">Test it!</div>\n        </a>\n    );\n}\n\nexport default Test;","import React from 'react';\nimport './View.css';\n\nconst View = (props) => {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.github}>\n            <div className=\"View\">View GitHub</div>\n        </a>\n    );\n}\n\nexport default View;","import React from 'react';\nimport './Project.css';\nimport Test from '../Test/Test';\nimport View from '../View/View';\n\nconst Project = (props) => {\n\n    // const projectColor = {\n    //     backgroundColor: props.color\n    // }\n\n    return (\n        <div className=\"Project\">\n            <div className=\"project-image\" \n                // style={projectColor}n\n                onMouseEnter={() => props.onMouseEnterHandler(props.projectNumber)}\n                onMouseLeave={props.onMouseLeaveHandler}\n            >\n            <video \n                className=\"project-video\"\n                src={props.video} \n                type=\"video/mp4\"\n                autoPlay\n                loop\n                muted\n            ></video>   \n            {props.hover === props.projectNumber ? \n                <div className=\"project-technologies\">\n                    <span id=\"made-with\">Made with:</span>\n                    <ul className=\"technologies-container\">\n                        {props.technologies.map(e => <li className=\"technologies-each\">{e}</li>)}\n                    </ul>\n                </div> \n                : null\n            }\n            </div>\n            <div className=\"project-name\">{props.name}</div>\n            <div className=\"project-description\">{props.description}</div>\n            <div className=\"project-links\">\n                <Test heroku={props.heroku} />\n                <View github={props.github} />\n            </div>\n        </div>\n    );\n};\n\nexport default Project;","import React, { Component } from 'react';\nimport './MainPage.css';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Project from '../../components/Project/Project';\nimport blackjackVideo from '../../videos/blackjack-video.mp4';\nimport photoContestVideo from '../../videos/photo-contest.mp4';\nimport fizzQuizVideo from '../../videos/fizz-quiz.mp4';\nimport completeMeVideo from '../../videos/complete-me.mp4';\n\nclass MainPage extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            hover: null\n        };\n    }\n\n    onMouseEnterHandler = (projectNumber) => {\n        this.setState({\n            hover: projectNumber\n        });\n    }\n\n    onMouseLeaveHandler = () => {\n        this.setState({\n            hover: null\n        });\n    }\n    \n    render() {\n        const completeMeTech = [\n            'React', 'Node.js', 'Express', 'Socket.io', \n            'HTML5', 'CSS', 'JavaScript', 'API', 'JWT', \n            'Bcrypt', 'MongoDB', 'Mongoose'\n        ];\n        \n        const fizzQuizTech = [\n            'Express', 'Node.js', 'MongoDB', 'JavaScript',\n            'OAuth', 'API', 'HTML', 'CSS'\n        ];\n\n        const likeTech = [\n            'Python', 'Django', 'Boto3', 'AWS', 'SQLite3',\n            'HTML', 'CSS'\n        ];\n\n        const blackjackTech = [\n            'JavaScript', 'HTML', 'CSS'\n        ];\n\n        return (\n            <div className=\"MainPage\">\n                <NavBar />\n\n                <div className=\"name\">Ryan Gonzales</div>\n                <div className=\"job-location\">-Developer // Los Angeles</div>\n\n                <div className=\"project\">Projects</div>   \n\n                <Project \n                    name=\"Complete Me!\"\n                    description=\"Complete me is a 2-player word completion game using Socket.io for real-time play.\"\n                    color=\"#FFD991\"\n                    heroku=\"https://complete-me-multiplayer.herokuapp.com/\"\n                    github=\"https://github.com/helloryantg/complete-me\"\n                    technologies={completeMeTech}\n                    onMouseEnterHandler={this.onMouseEnterHandler}\n                    onMouseLeaveHandler={this.onMouseLeaveHandler}\n                    hover={this.state.hover}\n                    projectNumber=\"1\"\n                    video={completeMeVideo}\n                />\n                <Project \n                    name=\"Fizz Quiz\"\n                    description='Fizz-Quiz is a \"hot potato\", trivia-based, drinking game. Play with friends while answering trivia questions as you beat the clock!'\n                    color=\"#FFAF91\"\n                    heroku=\"https://fizzquizz.herokuapp.com/\"\n                    github=\"https://github.com/helloryantg/fizz-quiz\"\n                    technologies={fizzQuizTech}\n                    onMouseEnterHandler={this.onMouseEnterHandler}\n                    onMouseLeaveHandler={this.onMouseLeaveHandler}\n                    hover={this.state.hover}\n                    projectNumber=\"2\"\n                    video={fizzQuizVideo}\n                />\n\n                <Project \n                    name=\"Like.\"\n                    description=\"Like. is a photography contest website where users can share their photographs and vote their most favorite per category.\"\n                    color=\"#91BBFF\"\n                    heroku=\"https://salty-sea-47975.herokuapp.com/\"\n                    github=\"https://github.com/helloryantg/photo_contest\"\n                    technologies={likeTech}\n                    onMouseEnterHandler={this.onMouseEnterHandler}\n                    onMouseLeaveHandler={this.onMouseLeaveHandler}\n                    hover={this.state.hover}\n                    projectNumber=\"3\"\n                    video={photoContestVideo}\n                />\n\n                <Project \n                    name=\"BlackJack\"\n                    description=\"Blackjack is my first project that I tackled game logic to make a functioning game using Vanilla JavaScript, HTML, and CSS.\"    \n                    color=\"#568418\"\n                    heroku=\"https://helloryantg.github.io/blackjack-game/\"\n                    github=\"https://github.com/helloryantg/blackjack-game\"\n                    technologies={blackjackTech}\n                    onMouseEnterHandler={this.onMouseEnterHandler}\n                    onMouseLeaveHandler={this.onMouseLeaveHandler}\n                    hover={this.state.hover}\n                    projectNumber=\"4\"\n                    video={blackjackVideo}\n                />\n\n                <div className=\"footer\">Ryan Gonzales - 2019</div>\n            </div> \n        );\n    };\n};\n\nexport default MainPage;","import React, { Component } from 'react';\nimport './App.css';\nimport MainPage from '../MainPage/MainPage';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}